services:
  api:
    build:
      context: .
      dockerfile: ./docker/dockerFile
    ports:
      - ${APP_PORT}:${APP_PORT}
    env_file:
      - .env
    command: >
      sh -c "
        corepack pnpm db:generate &&
        corepack pnpm db:migrate &&
        corepack pnpm dev
      "
    develop:
      watch:
        - path: .
          action: sync
          target: /app
        - path: /package.json
          action: rebuild
    depends_on:
      - db
      - redis

  db:
    image: postgres:17
    environment:
      - POSTGRES_USER=${DB_POSTGRES_USERNAME}
      - POSTGRES_PASSWORD=${DB_POSTGRES_PASSWORD}
      - POSTGRES_DB=${DB_POSTGRES_DATABASE}
    ports:
      - ${DB_POSTGRES_PORT}:${DB_POSTGRES_PORT}
    volumes:
      - db-data:/var/lib/postgresql/data
  redis:
    image: redis:8.0
    ports:
      - ${REDIS_PORT}:${REDIS_PORT}
    environment:
      REDIS_PASSWORD: ${REDIS_PASSWORD}
    volumes:
      - redis-data:/data
  
  minio:
    image: minio/minio:latest
    container_name: minio
    restart: unless-stopped
    env_file:
      - .env
    ports:
      - "${MINIO_PORT}:9000"
      - "${MINIO_CONSOLE_PORT}:9001"
    volumes:
      - ./data:/data
      - ./config:/root/.minio
    command: server /data --console-address ":9001"

volumes:
  db-data:
  redis-data:
